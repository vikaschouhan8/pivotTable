{"ast":null,"code":"var _jsxFileName = \"/home/devu/projects/my-app/src/CustomObj.js\";\nimport React, { Component } from 'react';\nimport { storeProducts } from \"./data\";\nexport default class CustomObj extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      store: storeProducts.data\n    };\n  }\n\n  render() {\n    // function myFunction() {\n    //     // var  = \"\";\n    //     var i;\n    //     for (i = 0; i < 5; i++) {\n    //         if (i === 3) {\n    //             continue;\n    //         }\n    //         text += \"The number is \" + i + \"<br>\";\n    //     }\n    //     // document.getElementById(\"demo\").innerHTML = text;\n    // }\n    // myFunction()\n    // end\n    let store = this.state.store;\n    var tempObj = {};\n    Object.keys(store).forEach(function (k) {\n      var val = store[k];\n      var customer = val['customer_name'];\n      var month = val['month'];\n      var itemName = val['item_name'];\n      var salesPerson = val['salesperson_name'];\n      if (!tempObj[customer]) tempObj[customer] = {\n        'type': 'row',\n        'key': 'customer_name'\n      };\n      if (!tempObj[customer][month]) tempObj[customer][month] = {\n        'type': 'row',\n        'key': 'month'\n      };\n      if (!tempObj[customer][month][itemName]) tempObj[customer][month][itemName] = {\n        'type': 'column',\n        'key': 'item_name'\n      };\n      if (!tempObj[customer][month][itemName][salesPerson]) tempObj[customer][month][itemName][salesPerson] = {\n        'type': 'column',\n        'key': 'sales_person',\n        'data': {\n          'value': 0,\n          'qty': 0\n        }\n      };\n      tempObj[customer][month][itemName][salesPerson]['data']['value'] = val['taxpaidamount'];\n      tempObj[customer][month][itemName][salesPerson]['data']['qty'] = val['qty'];\n    }); // console.log(\"result :\", tempObj);\n\n    var rowPush = [];\n    var text = '';\n\n    function pivotTablePlot(values) {\n      Object.keys(values).forEach(function (k) {\n        var subObj = values[k]; // we will get new object from here\n\n        console.log(\"values[k] \", values[k]);\n        console.log(\"key \", k);\n\n        if (values[k] == \"month\") {// create a new row\n          // for a customer display sales value and quantity for each month \n          // like aug, sept and so on  \n        }\n\n        if (k !== \"type\" && k != \"key\" && k != \"data\") {\n          console.log(\"k\", k); // if (k === 3) {\n          //     continue;\n          // }\n\n          rowPush.push(React.createElement(\"td\", {\n            colSpan: \"2\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 70\n            },\n            __self: this\n          }, k));\n          text += \" + \" + k + React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 71\n            },\n            __self: this\n          });\n        }\n\n        if (values[k].value) {\n          rowPush.push(React.createElement(React.Fragment, null, React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 76\n            },\n            __self: this\n          }, \" \", values[k].value), React.createElement(\"td\", {\n            rowSpan: \"2\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 77\n            },\n            __self: this\n          }, \"val \", values[k].qty)));\n          text += \" + \" + values[k].value + ' and ' + values[k].qty + React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 80\n            },\n            __self: this\n          });\n        } else {\n          // loop through the object to skip 'type' and 'key' keys\n          Object.keys(subObj).forEach(function (itemKey, index) {\n            if (typeof subObj[itemKey] == 'object') {\n              console.log(\"subobject \", subObj[itemKey]);\n              pivotTablePlot(subObj[itemKey]); // recursively call   \n            }\n          });\n        }\n      });\n    }\n\n    pivotTablePlot(tempObj); // End recursion \n\n    return React.createElement(React.Fragment, null, text);\n  }\n\n}","map":{"version":3,"sources":["/home/devu/projects/my-app/src/CustomObj.js"],"names":["React","Component","storeProducts","CustomObj","constructor","props","state","store","data","render","tempObj","Object","keys","forEach","k","val","customer","month","itemName","salesPerson","rowPush","text","pivotTablePlot","values","subObj","console","log","push","value","qty","itemKey","index"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { storeProducts } from \"./data\"\n\nexport default class CustomObj extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            store: storeProducts.data\n        }\n    }\n\n    render() {\n        // function myFunction() {\n        //     // var  = \"\";\n        //     var i;\n        //     for (i = 0; i < 5; i++) {\n        //         if (i === 3) {\n        //             continue;\n        //         }\n        //         text += \"The number is \" + i + \"<br>\";\n        //     }\n        //     // document.getElementById(\"demo\").innerHTML = text;\n        // }\n        // myFunction()\n        // end\n        let store = this.state.store;\n        var tempObj = {};\n        Object.keys(store).forEach(function (k) {\n            var val = store[k];\n            var customer = val['customer_name'];\n            var month = val['month'];\n            var itemName = val['item_name']\n            var salesPerson = val['salesperson_name']\n\n            if (!tempObj[customer])\n                tempObj[customer] = { 'type': 'row', 'key': 'customer_name' };\n\n            if (!tempObj[customer][month])\n                tempObj[customer][month] = { 'type': 'row', 'key': 'month' }\n\n            if (!tempObj[customer][month][itemName])\n                tempObj[customer][month][itemName] = { 'type': 'column', 'key': 'item_name' }\n\n            if (!tempObj[customer][month][itemName][salesPerson])\n                tempObj[customer][month][itemName][salesPerson] = { 'type': 'column', 'key': 'sales_person', 'data': { 'value': 0, 'qty': 0 } }\n\n            tempObj[customer][month][itemName][salesPerson]['data']['value'] = val['taxpaidamount'];\n            tempObj[customer][month][itemName][salesPerson]['data']['qty'] = val['qty'];\n\n        });\n\n        // console.log(\"result :\", tempObj);\n        var rowPush = []\n        var text = ''\n        function pivotTablePlot(values) {\n            Object.keys(values).forEach(function (k) {\n                var subObj = values[k] // we will get new object from here\n                console.log(\"values[k] \", values[k]);\n                console.log(\"key \", k);\n                if (values[k] == \"month\") {\n                    // create a new row\n                    // for a customer display sales value and quantity for each month \n                    // like aug, sept and so on  \n                }\n                if (k !== \"type\" && k != \"key\" && k != \"data\") {\n                    console.log(\"k\", k)\n                    // if (k === 3) {\n                    //     continue;\n                    // }\n                    rowPush.push(<td colSpan=\"2\">{k}</td>)\n                    text += \" + \" + k + <br />\n                }\n                if (values[k].value) {\n                    rowPush.push(\n                        <>\n                            <td> {values[k].value}</td>\n                            <td rowSpan=\"2\">val {values[k].qty}</td>\n                        </>\n                    )\n                    text += \" + \" + values[k].value + ' and '+ values[k].qty + <br />\n                }\n\n                else {  // loop through the object to skip 'type' and 'key' keys\n                    Object.keys(subObj).forEach(function (itemKey, index) {\n                        if (typeof subObj[itemKey] == 'object') {\n                            console.log(\"subobject \", subObj[itemKey]);\n                            pivotTablePlot(subObj[itemKey]); // recursively call   \n                        }\n                    })\n                }\n            })\n        }\n        pivotTablePlot(tempObj);\n\n        // End recursion \n        return (<>\n            {text}\n            {/* <table border=\"1\">\n                <thead>\n                    <tr >\n                        <th>Value</th>\n                        <th>Qty</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr>\n                        {rowPush}\n                    </tr>\n                </tbody>\n            </table> */}\n            {/* {this.state.text} */}\n        </>)\n    }\n}\n"]},"metadata":{},"sourceType":"module"}