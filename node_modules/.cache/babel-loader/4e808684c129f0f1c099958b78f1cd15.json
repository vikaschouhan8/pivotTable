{"ast":null,"code":"var _jsxFileName = \"/home/devu/projects/my-app/src/CustomObj.js\";\nimport React, { Component } from 'react';\nimport { storeProducts } from \"./data\";\nexport default class CustomObjLast extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      store: storeProducts.data,\n      tempObjData: '',\n      title: ''\n    };\n    this.textInput = React.createRef();\n    this.myRef = React.createRef();\n  }\n\n  render() {\n    let store = this.state.store;\n    var tempObj = {};\n    var months = []; // document.write(store);\n\n    Object.keys(store).forEach(function (k) {\n      var val = store[k];\n      var customer = val['customer_name'];\n      var month = val['month'];\n      var itemName = val['item_name'];\n      var salesPerson = val['salesperson_name'];\n      if (!tempObj[customer]) tempObj[customer] = {\n        'type': 'row',\n        'key': 'customer_name'\n      };\n      if (!tempObj[customer][month]) tempObj[customer][month] = {\n        'type': 'row',\n        'key': 'month'\n      };\n      if (!tempObj[customer][month][itemName]) tempObj[customer][month][itemName] = {\n        'type': 'column',\n        'key': 'item_name'\n      };\n      if (!tempObj[customer][month][itemName][salesPerson]) tempObj[customer][month][itemName][salesPerson] = {\n        'type': 'column',\n        'key': 'sales_person',\n        'data': {\n          'value': 0,\n          'qty': 0\n        }\n      };\n      tempObj[customer][month][itemName][salesPerson]['data']['value'] = val['taxpaidamount'];\n      tempObj[customer][month][itemName][salesPerson]['data']['qty'] = val['qty'];\n    }); // console.log(\"result :\", tempObj);\n\n    var count = [];\n    var rowPush = [];\n\n    function pivotTablePlot(values) {\n      // console.log(\"start \",values);\n      Object.keys(values).forEach(function (k) {\n        var subObj = values[k]; // we will get new object from here\n        // console.log(\"k \", values[k])\n\n        var arr = [\"Aug\", \"Sept\", \"Oct\", \"Dec\", \"Jan\", \"Feb\"];\n        var monthsArr = arr.map(i => {\n          return React.createElement(\"td\", {\n            key: i,\n            colSpan: \"2\",\n            style: {\n              textAlign: \"left\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 58\n            },\n            __self: this\n          }, i);\n        });\n        let salesPerson = arr.map((i, index) => {\n          return React.createElement(React.Fragment, null, React.createElement(\"td\", {\n            colSpan: \"2\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 64\n            },\n            __self: this\n          }, \"Sales person \", index + 1));\n        });\n        let valQty = arr.map(i => {\n          return React.createElement(React.Fragment, null, React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 71\n            },\n            __self: this\n          }, \"Value\"), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 72\n            },\n            __self: this\n          }, \"Quantity\"));\n        });\n\n        function customerNameOnly(v, mo) {\n          Object.keys(values[v]).forEach((key, index) => {\n            months.push(key);\n          });\n          var tempData = values[v];\n          console.log(v, \"- \", values[v]);\n          var re = /^[A-Z ,]*$/; // Filter Customer name\n\n          if (re.test(v)) {\n            rowPush.push(React.createElement(React.Fragment, null, React.createElement(\"tr\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 86\n              },\n              __self: this\n            }, React.createElement(\"td\", {\n              style: {\n                border: \"1px solid black\"\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 87\n              },\n              __self: this\n            }, k), typeof tempData == \"object\" && Object.keys(tempData).forEach(function (kTempData) {\n              // console.log(\"kTempData\", kTempData);\n              if (kTempData != \"type\" && kTempData != \"key\") {\n                // console.log(\"kTempData---\", kTempData);\n                rowPush.push(React.createElement(\"td\", {\n                  style: {\n                    textAlign: \"left\"\n                  },\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 93\n                  },\n                  __self: this\n                }, kTempData));\n              }\n            }) // console.log(\"hereeee\", tempData)\n            ), React.createElement(\"tr\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 100\n              },\n              __self: this\n            }, valQty)));\n          }\n        }\n\n        customerNameOnly(k, monthsArr);\n        var subTempObj = values[k];\n        var size = Object.keys(subTempObj).length;\n\n        if (values[k] == \"month\") {\n          // if (values[k].value) {\n          count.push(1);\n          rowPush.push(React.createElement(React.Fragment, null, values[k].value != '' && React.createElement(React.Fragment, null, React.createElement(\"td\", {\n            style: {\n              border: \"1px solid black\",\n              padding: \"10px\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 120\n            },\n            __self: this\n          }, \" \", values[k].value), React.createElement(\"td\", {\n            style: {\n              border: \"1px solid black\",\n              padding: \"10px\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 121\n            },\n            __self: this\n          }, \" \", values[k].qty)))); // }\n        } else {\n          // loop through the object to skip 'type' and 'key' keys\n          Object.keys(subObj).forEach(function (itemKey, index) {\n            if (typeof subObj[itemKey] == 'object') {\n              // console.log(\"subobject \", subObj[itemKey]);\n              console.log(\"A\");\n              pivotTablePlot(subObj[itemKey]); // recursively call  \n\n              console.log(\"B\");\n            }\n          });\n        }\n      });\n    }\n\n    pivotTablePlot(tempObj);\n    var monthFliterd = months.filter(function (number) {\n      if (isNaN(number) && number != \"type\" && number != \"value\" && number != \"qty\" && number != \"column\" && number != \" NULL\" && number != \"key\") {\n        return number;\n      }\n    });\n    let head = count.map((item, index) => {\n      return React.createElement(React.Fragment, null, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, \"Value\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, \"Quantity\"));\n    });\n    return React.createElement(React.Fragment, null, \"  \", React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, \"Mission Pivot table\"), React.createElement(\"table\", {\n      border: \"1\",\n      style: {\n        borderCollapse: \"collapse\",\n        border: \"1px solid black\",\n        width: \"100%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    })), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, rowPush)));\n  }\n\n}","map":{"version":3,"sources":["/home/devu/projects/my-app/src/CustomObj.js"],"names":["React","Component","storeProducts","CustomObjLast","constructor","props","state","store","data","tempObjData","title","textInput","createRef","myRef","render","tempObj","months","Object","keys","forEach","k","val","customer","month","itemName","salesPerson","count","rowPush","pivotTablePlot","values","subObj","arr","monthsArr","map","i","textAlign","index","valQty","customerNameOnly","v","mo","key","push","tempData","console","log","re","test","border","kTempData","subTempObj","size","length","value","padding","qty","itemKey","monthFliterd","filter","number","isNaN","head","item","borderCollapse","width"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { storeProducts } from \"./data\"\n\nexport default class CustomObjLast extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            store: storeProducts.data,\n            tempObjData: '',\n            title: ''\n        }\n\n        this.textInput = React.createRef();\n        this.myRef = React.createRef();\n    }\n\n    render() {\n        let store = this.state.store;\n        var tempObj = {};\n        var months = []\n        // document.write(store);\n\n        Object.keys(store).forEach(function (k) {\n            var val = store[k];\n            var customer = val['customer_name'];\n            var month = val['month'];\n            var itemName = val['item_name']\n            var salesPerson = val['salesperson_name']\n\n            if (!tempObj[customer])\n                tempObj[customer] = { 'type': 'row', 'key': 'customer_name' };\n\n            if (!tempObj[customer][month])\n                tempObj[customer][month] = { 'type': 'row', 'key': 'month' }\n\n            if (!tempObj[customer][month][itemName])\n                tempObj[customer][month][itemName] = { 'type': 'column', 'key': 'item_name' }\n\n            if (!tempObj[customer][month][itemName][salesPerson])\n                tempObj[customer][month][itemName][salesPerson] = { 'type': 'column', 'key': 'sales_person', 'data': { 'value': 0, 'qty': 0 } }\n\n            tempObj[customer][month][itemName][salesPerson]['data']['value'] = val['taxpaidamount'];\n            tempObj[customer][month][itemName][salesPerson]['data']['qty'] = val['qty'];\n\n        });\n\n        // console.log(\"result :\", tempObj);\n        var count = []\n        var rowPush = []\n        function pivotTablePlot(values) {\n            // console.log(\"start \",values);\n            Object.keys(values).forEach(function (k) {\n                var subObj = values[k] // we will get new object from here\n                // console.log(\"k \", values[k])\n                var arr = [\"Aug\", \"Sept\", \"Oct\", \"Dec\", \"Jan\", \"Feb\"]\n                var monthsArr = arr.map(i => {\n                    return (\n                        <td key={i} colSpan=\"2\" style={{ textAlign: \"left\" }}>{i}</td>\n                    )\n                })\n                let salesPerson = arr.map((i, index) => {\n                    return (\n                        <>\n                            <td colSpan=\"2\">Sales person {index + 1}</td>\n                        </>\n                    )\n                })\n                let valQty = arr.map(i => {\n                    return (\n                        <>\n                            <td>Value</td>\n                            <td>Quantity</td>\n                        </>\n                    )\n                })\n                function customerNameOnly(v, mo) {\n                    Object.keys(values[v]).forEach((key, index) => {\n                        months.push(key)\n                    })\n                    var tempData = values[v]\n                    console.log(v, \"- \", values[v])\n                    var re = /^[A-Z ,]*$/; // Filter Customer name\n                    if (re.test(v)) {\n                        rowPush.push(\n                            <>\n                                <tr>\n                                    <td style={{ border: \"1px solid black\" }}>{k}</td>\n                                    {typeof tempData == \"object\" && Object.keys(tempData).forEach(function (kTempData) {\n                                        // console.log(\"kTempData\", kTempData);\n                                        if (kTempData != \"type\" && kTempData != \"key\") {\n                                            // console.log(\"kTempData---\", kTempData);\n                                            rowPush.push(\n                                            <td style={{ textAlign: \"left\" }}>{kTempData}</td>)\n                                        }\n\n                                    })\n                                        // console.log(\"hereeee\", tempData)\n                                    }\n                                </tr>\n                                <tr>\n                                    {valQty}\n                                </tr>\n                            </>\n                        )\n                    }\n                }\n                customerNameOnly(k, monthsArr);\n\n                var subTempObj = values[k]\n                var size = Object.keys(subTempObj).length\n\n                if (values[k] == \"month\") {\n\n                    // if (values[k].value) {\n                    count.push(1)\n                    rowPush.push(\n                        <>\n                            {values[k].value != '' &&\n                                <>\n                                    <td style={{ border: \"1px solid black\", padding: \"10px\" }}> {values[k].value}</td>\n                                    <td style={{ border: \"1px solid black\", padding: \"10px\" }}> {values[k].qty}</td>\n                                </>\n                            }\n                        </>\n                    )\n                    // }\n                } else {  // loop through the object to skip 'type' and 'key' keys\n                    Object.keys(subObj).forEach(function (itemKey, index) {\n                        if (typeof subObj[itemKey] == 'object') {\n                            // console.log(\"subobject \", subObj[itemKey]);\n                            console.log(\"A\");\n                            pivotTablePlot(subObj[itemKey]); // recursively call  \n                            console.log(\"B\");\n\n                        }\n                    })\n                }\n            })\n        }\n        pivotTablePlot(tempObj);\n        var monthFliterd = months.filter(function (number) {\n            if (isNaN(number) && number != \"type\" && number != \"value\" && number != \"qty\" && number != \"column\" && number != \" NULL\" && number != \"key\") {\n                return number\n            }\n        });\n        let head = count.map((item, index) => {\n            return (\n                <>\n                    <th>Value</th>\n                    <th>Quantity</th>\n                </>\n            )\n        })\n        return (\n            <>  <h4>Mission Pivot table</h4>\n                <table border=\"1\" style={{ borderCollapse: \"collapse\", border: \"1px solid black\", width: \"100%\" }}>\n                    <thead>\n                        <tr>\n                            {/* <th style={{ border: \"1px solid black\", height: \"50px\" }}>Customer</th> */}\n                            {/* {head} */}\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {rowPush}\n                    </tbody>\n                </table>\n            </>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}