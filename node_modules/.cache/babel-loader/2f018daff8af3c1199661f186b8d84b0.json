{"ast":null,"code":"var _jsxFileName = \"/home/devu/projects/my-app/src/CustomObj.js\";\nimport React, { Component } from 'react';\nimport { storeProducts } from \"./data\";\nexport default class CustomObjLast extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      store: storeProducts.data,\n      tempObjData: '',\n      title: ''\n    };\n    this.textInput = React.createRef();\n    this.myRef = React.createRef();\n  }\n\n  render() {\n    let store = this.state.store;\n    var tempObj = {};\n    var months = []; // document.write(store);\n\n    Object.keys(store).forEach(function (k) {\n      var val = store[k];\n      var customer = val['customer_name'];\n      var month = val['month'];\n      var itemName = val['item_name'];\n      var salesPerson = val['salesperson_name'];\n      if (!tempObj[customer]) tempObj[customer] = {\n        'type': 'row',\n        'key': 'customer_name'\n      };\n      if (!tempObj[customer][month]) tempObj[customer][month] = {\n        'type': 'row',\n        'key': 'month'\n      };\n      if (!tempObj[customer][month][itemName]) tempObj[customer][month][itemName] = {\n        'type': 'column',\n        'key': 'item_name'\n      };\n      if (!tempObj[customer][month][itemName][salesPerson]) tempObj[customer][month][itemName][salesPerson] = {\n        'type': 'column',\n        'key': 'sales_person',\n        'data': {\n          'value': 0,\n          'qty': 0\n        }\n      };\n      tempObj[customer][month][itemName][salesPerson]['data']['value'] = val['taxpaidamount'];\n      tempObj[customer][month][itemName][salesPerson]['data']['qty'] = val['qty'];\n    });\n    console.log(\"result :\", tempObj);\n    var count = [];\n    var rowPush = [];\n    var monthPush = [];\n\n    function pivotTablePlot(values) {\n      // console.log(\"start \",values);\n      Object.keys(values).forEach(function (k) {\n        var subObj = values[k]; // we will get new object from here\n        // console.log(\"k \", values[k])\n\n        var arr = [\"Aug\", \"Sept\", \"Oct\", \"Dec\", \"Jan\", \"Feb\"];\n        var monthsArr = arr.map(i => {\n          return React.createElement(\"td\", {\n            key: i,\n            colSpan: \"2\",\n            style: {\n              textAlign: \"left\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 59\n            },\n            __self: this\n          }, i);\n        });\n        let salesPerson = arr.map((i, index) => {\n          return React.createElement(React.Fragment, null, React.createElement(\"td\", {\n            colSpan: \"2\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 65\n            },\n            __self: this\n          }, \"Sales person \", index + 1));\n        });\n\n        function customerNameOnly(customerName, mo) {\n          var tempData = values[customerName]; // console.log(\"need salesperson name : \", tempData);\n          // feacting \n\n          var re = /^[A-Z ,]*$/; // Filter Customer name\n\n          if (re.test(customerName)) {\n            var td = [];\n            rowPush.push(React.createElement(React.Fragment, null, React.createElement(\"tr\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 78\n              },\n              __self: this\n            }, React.createElement(\"td\", {\n              rowSpan: \"3\",\n              style: {\n                border: \"1px solid black\",\n                fontWeight: \"bolder\"\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 79\n              },\n              __self: this\n            }, customerName), typeof tempData === \"object\" && Object.keys(tempData).forEach(function (monthNameKey) {\n              if (monthNameKey !== \"type\" && monthNameKey !== \"key\") {\n                td.push(monthNameKey);\n                {\n                  Object.keys(monthNameKey).forEach(function (saleP) {\n                    console.log(\"SaleP-\", saleP);\n                  });\n                }\n              }\n            }), td.map((monthName, inn) => {\n              return React.createElement(\"td\", {\n                style: {\n                  fontWeight: \"bolder\"\n                },\n                colSpan: \"3\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 93\n                },\n                __self: this\n              }, monthName);\n            })), React.createElement(\"tr\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 98\n              },\n              __self: this\n            }, React.createElement(\"td\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 99\n              },\n              __self: this\n            }, \"sale person\"))));\n          }\n        }\n\n        customerNameOnly(k, monthsArr);\n\n        if (values[k].value) {\n          rowPush.push(React.createElement(React.Fragment, null, values[k].value !== '' && React.createElement(React.Fragment, null, React.createElement(\"td\", {\n            style: {\n              border: \"1px solid black\",\n              padding: \"10px\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 112\n            },\n            __self: this\n          }, \" \", values[k].value), React.createElement(\"td\", {\n            style: {\n              border: \"1px solid black\",\n              padding: \"10px\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 113\n            },\n            __self: this\n          }, \" \", values[k].qty))));\n        } else {\n          // loop through the object to skip 'type' and 'key' keys\n          Object.keys(subObj).forEach(function (itemKey, index) {\n            if (typeof subObj[itemKey] === 'object') {\n              pivotTablePlot(subObj[itemKey]); // recursively call  \n            }\n          });\n        }\n      });\n    }\n\n    pivotTablePlot(tempObj);\n    var monthFliterd = months.filter(function (number) {\n      if (isNaN(number) && number !== \"type\" && number !== \"value\" && number !== \"qty\" && number !== \"column\" && number !== \" NULL\" && number !== \"key\") {\n        return number;\n      }\n    });\n    let head = count.map((item, index) => {\n      return React.createElement(React.Fragment, null, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, \"Value\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, \"Quantity\"));\n    });\n    var arr = [\"Aug\", \"Sept\", \"Oct\", \"Dec\", \"Jan\", \"Feb\"];\n    let valQty = arr.map(i => {\n      return React.createElement(React.Fragment, null, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, \"Value\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, \"Quantity\"));\n    });\n    return React.createElement(React.Fragment, null, \"  \", React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, \"Mission Pivot table\"), React.createElement(\"table\", {\n      border: \"1\",\n      style: {\n        borderCollapse: \"collapse\",\n        border: \"1px solid black\",\n        width: \"100%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      style: {\n        fontSize: \"20px\",\n        fontWeight: \"bolder\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }), React.createElement(\"thead\", {\n      style: {\n        fontSize: \"18px\",\n        fontWeight: \"bold\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      rowSpan: \"3\",\n      style: {\n        color: \"#fff\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, \"customer_name\"), React.createElement(\"td\", {\n      colSpan: \"6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, \"month 1\"), React.createElement(\"td\", {\n      colSpan: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, \"month 2\"), React.createElement(\"td\", {\n      colSpan: \"4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, \"month 3\"), React.createElement(\"td\", {\n      colSpan: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, \"month 4\"), React.createElement(\"td\", {\n      colSpan: \"4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, \"month 5\"), React.createElement(\"td\", {\n      colSpan: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, \"month 6\")), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      colSpan: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, \"Sale person 1\"), React.createElement(\"td\", {\n      colSpan: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, \"Sale person 2\"), React.createElement(\"td\", {\n      colSpan: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, \"Sale person 3\"), React.createElement(\"td\", {\n      colSpan: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, \"Sale person 1\"), React.createElement(\"td\", {\n      colSpan: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, \"Sale person 3\"), React.createElement(\"td\", {\n      colSpan: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, \"Sale person 2\"), React.createElement(\"td\", {\n      colSpan: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, \"Sale person 2\"), React.createElement(\"td\", {\n      colSpan: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, \"Sale person 2\"), React.createElement(\"td\", {\n      colSpan: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, \"Sale person 2\"), React.createElement(\"td\", {\n      colSpan: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, \"Sale person 3\")), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, \"Value\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, \"Qty\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, \"Value\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, \"Qty\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, \"Value\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, \"Qty\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, \"Value\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, \"Qty\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, \"Value\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, \"Qty\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, \"Value\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, \"Qty\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, \"Value\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, \"Qty\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, \"Value\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, \"Qty\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, \"Value\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, \"Qty\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, \"Value\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, \"Qty\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, rowPush)));\n  }\n\n}","map":{"version":3,"sources":["/home/devu/projects/my-app/src/CustomObj.js"],"names":["React","Component","storeProducts","CustomObjLast","constructor","props","state","store","data","tempObjData","title","textInput","createRef","myRef","render","tempObj","months","Object","keys","forEach","k","val","customer","month","itemName","salesPerson","console","log","count","rowPush","monthPush","pivotTablePlot","values","subObj","arr","monthsArr","map","i","textAlign","index","customerNameOnly","customerName","mo","tempData","re","test","td","push","border","fontWeight","monthNameKey","saleP","monthName","inn","value","padding","qty","itemKey","monthFliterd","filter","number","isNaN","head","item","valQty","borderCollapse","width","fontSize","color"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { storeProducts } from \"./data\"\n\nexport default class CustomObjLast extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            store: storeProducts.data,\n            tempObjData: '',\n            title: ''\n        }\n\n        this.textInput = React.createRef();\n        this.myRef = React.createRef();\n    }\n\n    render() {\n        let store = this.state.store;\n        var tempObj = {};\n        var months = []\n        // document.write(store);\n\n        Object.keys(store).forEach(function (k) {\n            var val = store[k];\n            var customer = val['customer_name'];\n            var month = val['month'];\n            var itemName = val['item_name']\n            var salesPerson = val['salesperson_name']\n\n            if (!tempObj[customer])\n                tempObj[customer] = { 'type': 'row', 'key': 'customer_name' };\n\n            if (!tempObj[customer][month])\n                tempObj[customer][month] = { 'type': 'row', 'key': 'month' }\n\n            if (!tempObj[customer][month][itemName])\n                tempObj[customer][month][itemName] = { 'type': 'column', 'key': 'item_name' }\n\n            if (!tempObj[customer][month][itemName][salesPerson])\n                tempObj[customer][month][itemName][salesPerson] = { 'type': 'column', 'key': 'sales_person', 'data': { 'value': 0, 'qty': 0 } }\n\n            tempObj[customer][month][itemName][salesPerson]['data']['value'] = val['taxpaidamount'];\n            tempObj[customer][month][itemName][salesPerson]['data']['qty'] = val['qty'];\n\n        });\n\n        console.log(\"result :\", tempObj);\n        var count = []\n        var rowPush = []\n        var monthPush = []\n        function pivotTablePlot(values) {\n            // console.log(\"start \",values);\n            Object.keys(values).forEach(function (k) {\n                var subObj = values[k] // we will get new object from here\n                // console.log(\"k \", values[k])\n                var arr = [\"Aug\", \"Sept\", \"Oct\", \"Dec\", \"Jan\", \"Feb\"]\n                var monthsArr = arr.map(i => {\n                    return (\n                        <td key={i} colSpan=\"2\" style={{ textAlign: \"left\" }}>{i}</td>\n                    )\n                })\n                let salesPerson = arr.map((i, index) => {\n                    return (\n                        <>\n                            <td colSpan=\"2\">Sales person {index + 1}</td>\n                        </>\n                    )\n                })\n                function customerNameOnly(customerName, mo) {\n                    var tempData = values[customerName]\n                    // console.log(\"need salesperson name : \", tempData);\n                    // feacting \n                    var re = /^[A-Z ,]*$/; // Filter Customer name\n                    if (re.test(customerName)) {\n                        var td = []\n                        rowPush.push(\n                            <>\n                                <tr>\n                                    <td rowSpan=\"3\" style={{ border: \"1px solid black\", fontWeight:\"bolder\" }}>\n                                        {customerName}\n                                    </td>\n                                        {typeof tempData === \"object\" && Object.keys(tempData).forEach(function (monthNameKey) {\n                                            if (monthNameKey !== \"type\" && monthNameKey !== \"key\") {\n                                                td.push(monthNameKey)\n                                                {\n                                                    Object.keys(monthNameKey).forEach(function(saleP){\n                                                        console.log(\"SaleP-\", saleP);\n                                                    })\n                                                }\n                                            }\n                                        })}\n                                        {td.map((monthName,inn)=>{return(\n                                            <td style={{fontWeight:\"bolder\"}} colSpan=\"3\">\n                                                {monthName}\n                                            </td>)})}\n                                        {/* Need to dynamically set colSpan for Month name logically */}\n                                </tr>\n                                <tr>\n                                    <td>sale person</td> \n                                    {/* Need to dynamically set colSpan for Sale person logically */}\n                                </tr>\n                            </>\n                        )\n                    }\n                }\n                customerNameOnly(k, monthsArr);\n                if (values[k].value) {\n                    rowPush.push(\n                        <>\n                            {values[k].value !== '' &&\n                                <>\n                                    <td style={{ border: \"1px solid black\", padding: \"10px\" }}> {values[k].value}</td>\n                                    <td style={{ border: \"1px solid black\", padding: \"10px\" }}> {values[k].qty}</td>\n                                </>\n                            }\n                        </>\n                    )\n                } else {  // loop through the object to skip 'type' and 'key' keys\n                    Object.keys(subObj).forEach(function (itemKey, index) {\n                        if (typeof subObj[itemKey] === 'object') {\n                            pivotTablePlot(subObj[itemKey]); // recursively call  \n                        }\n                    })\n                }\n            })\n        }\n        pivotTablePlot(tempObj);\n        var monthFliterd = months.filter(function (number) {\n            if (isNaN(number) && number !== \"type\" && number !== \"value\" && number !== \"qty\" && number !== \"column\" && number !== \" NULL\" && number !== \"key\") {\n                return number\n            }\n        });\n        let head = count.map((item, index) => {\n            return (\n                <>\n                    <th>Value</th>\n                    <th>Quantity</th>\n                </>\n            )\n        })\n        var arr = [\"Aug\", \"Sept\", \"Oct\", \"Dec\", \"Jan\", \"Feb\"]\n        let valQty = arr.map(i => {\n            return (\n                <>\n                    <td>Value</td>\n                    <td>Quantity</td>\n                </>\n            )\n        })\n\n        return (\n            <>  <h4>Mission Pivot table</h4>\n                <table border=\"1\" style={{ borderCollapse: \"collapse\", border: \"1px solid black\", width: \"100%\" }}>\n                    <thead style={{fontSize:\"20px\", fontWeight:\"bolder\"}}> \n                        {/* <tr>\n                            <td rowSpan=\"3\">customer_name</td>\n                            <td colSpan=\"16\">Months</td>\n                        </tr>\n                        <tr>\n                            <td colSpan=\"16\">Sale person 1</td>\n                        </tr>\n                        <tr>\n                            <td>Value</td>\n                            <td>Quantity</td>\n                            <td>Value</td>\n                            <td>Quantity</td>\n                            <td>Value</td>\n                            <td>Quantity</td>\n                            <td>Value</td>\n                            <td>Quantity</td>\n                            <td>Value</td>\n                            <td>Quantity</td>\n                            <td>Value</td>\n                            <td>Quantity</td>\n                            <td>Value</td>\n                            <td>Quantity</td>\n                            <td>Value</td>\n                            <td>Quantity</td>\n                            <td>Value</td>\n                            <td>Quantity</td>\n                            \n                        </tr> */}\n                    </thead>\n                    <thead style={{fontSize:\"18px\", fontWeight:\"bold\"}}>\n                        <tr>\n                            <td rowSpan=\"3\" style={{color:\"#fff\"}}>customer_name</td>\n                            <td colSpan=\"6\">month 1</td>\n                            <td colSpan=\"2\">month 2</td>\n                            <td colSpan=\"4\">month 3</td>\n                            <td colSpan=\"2\">month 4</td>\n                            <td colSpan=\"4\">month 5</td>\n                            <td colSpan=\"2\">month 6</td>\n                        </tr>\n                        <tr>\n                            <td colSpan=\"2\">Sale person 1</td>\n                            <td colSpan=\"2\">Sale person 2</td>\n                            <td colSpan=\"2\">Sale person 3</td>\n                            <td colSpan=\"2\">Sale person 1</td>\n                            <td colSpan=\"2\">Sale person 3</td>\n                            <td colSpan=\"2\">Sale person 2</td>\n                            <td colSpan=\"2\">Sale person 2</td>\n                            <td colSpan=\"2\">Sale person 2</td>\n                            <td colSpan=\"2\">Sale person 2</td>\n                            <td colSpan=\"2\">Sale person 3</td>\n                        </tr>\n                        <tr>\n                            <td>Value</td>\n                            <td>Qty</td>\n                            <td>Value</td>\n                            <td>Qty</td>\n                            <td>Value</td>\n                            <td>Qty</td>\n                            <td>Value</td>\n                            <td>Qty</td>\n                            <td>Value</td>\n                            <td>Qty</td>\n                            <td>Value</td>\n                            <td>Qty</td>\n                            <td>Value</td>\n                            <td>Qty</td>\n                            <td>Value</td>\n                            <td>Qty</td>\n                            <td>Value</td>\n                            <td>Qty</td>\n                            <td>Value</td>\n                            <td>Qty</td>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {rowPush}\n                    </tbody>\n                </table>\n            </>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}