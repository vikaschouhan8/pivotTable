{"ast":null,"code":"var _jsxFileName = \"/home/devu/projects/my-app/src/CustomObj.js\";\nimport React, { Component } from 'react';\nimport { storeProducts } from \"./data\";\nexport default class CustomObj extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      store: storeProducts.data,\n      tempObjData: ''\n    };\n  }\n\n  render() {\n    let store = this.state.store;\n    var tempObj = {};\n    Object.keys(store).forEach(function (k) {\n      var val = store[k];\n      var customer = val['customer_name'];\n      var month = val['month'];\n      var itemName = val['item_name'];\n      var salesPerson = val['salesperson_name'];\n      if (!tempObj[customer]) tempObj[customer] = {\n        'type': 'row',\n        'key': 'customer_name'\n      };\n      if (!tempObj[customer][month]) tempObj[customer][month] = {\n        'type': 'row',\n        'key': 'month'\n      };\n      if (!tempObj[customer][month][itemName]) tempObj[customer][month][itemName] = {\n        'type': 'column',\n        'key': 'item_name'\n      };\n      if (!tempObj[customer][month][itemName][salesPerson]) tempObj[customer][month][itemName][salesPerson] = {\n        'type': 'column',\n        'key': 'sales_person',\n        'data': {\n          'value': 0,\n          'qty': 0\n        }\n      };\n      tempObj[customer][month][itemName][salesPerson]['data']['value'] = val['taxpaidamount'];\n      tempObj[customer][month][itemName][salesPerson]['data']['qty'] = val['qty'];\n    }); // console.log(\"result :\", tempObj);\n\n    var tempObjData = JSON.stringify(tempObj);\n    var headers; // console.log(tempObjData) \n    // var arr = Object.values(tempObj);\n\n    var pivotStructure = '';\n    Object.keys(tempObj).forEach(function (k) {\n      var key = k;\n      var value = tempObj[k]; // console.log(k)\n      // console.log(value)\n\n      var value = Object.values(value);\n      var valueLength = Object.values(value).length;\n      console.log(\"value \", value);\n      console.log(\"length \", valueLength); // if(valueLength)\n\n      var head;\n\n      for (let i = 0; i < Object.values(value).length - 2; i++) {\n        head += React.createElement(React.Fragment, null, React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }, React.createElement(\"th\", {\n          colSpan: \"2\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }, \"Month\")), React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }, \"Value\"), React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, \"Qty\")));\n      } // headers = value.map((item, index) => {\n      //     return (\n      //         <>\n      //             <thead>\n      //                 <tr>\n      //                     <th rowSpan=\"3\">Row/column</th>\n      //                 </tr>\n      //                 <tr>\n      //                     <th colSpan=\"2\">Month</th>\n      //                 </tr>\n      //                 <tr>\n      //                     <th>Value</th>\n      //                     <th>Qty</th>\n      //                 </tr>\n      //             </thead>\n      //             {/* <tbody>\n      //             <tr>\n      //                 <td rowSpan=\"2\">Monday</td>\n      //                 <td rowSpan=\"2\">8:00 a.m</td>\n      //                 <td rowSpan=\"2\">5:00 p.m</td>\n      //                 <td>Introduction to XML</td>\n      //             </tr>\n      //             <tr>\n      //                 <td>Validity: DTD and Relax NG</td>\n      //             </tr>\n      //             <tr>\n      //                 <td rowSpan=\"4\">Tuesday</td>\n      //                 <td>8:00 a.m</td>\n      //                 <td>11:00 a.m</td>\n      //                 <td rowSpan=\"2\">XPath</td>\n      //             </tr>\n      //             <tr>\n      //                 <td rowSpan=\"2\">11:00 a.m</td>\n      //                 <td rowSpan=\"2\">2:00 p.m</td>\n      //             </tr>\n      //             <tr>\n      //                 <td rowSpan=\"2\">XSL transformation</td>\n      //             </tr>\n      //             <tr>\n      //                 <td>2:00 p.m</td>\n      //                 <td>5:00 p.m</td>\n      //             </tr>\n      //             <tr>\n      //                 <td>Wednesday</td>\n      //                 <td>8:00 a.m</td>\n      //                 <td>12:00 p.m</td>\n      //                 <td>XLS Formatting Objects</td>\n      //             </tr> */}\n      //             {/* </tbody> */}\n      //         </>\n      //         // </table>\n      //     )\n      // })\n      // mainHeader+=headers\n\n\n      let count = Object.keys(value).length; //  \n      // pivotStructure= `<tr><td rowSpan=\"2\">${key}</td></tr>`\n      // console.log(count);\n      // var span=\"\";\n      // if(value){\n      // pivotStructure+=<tr>{value.}</tr>\n      // }\n      //     span=\"colspan=10\";\n      // console.log(value.key)\n      // pivotStructure+=\n    }); // console.log(arr)\n    // document.write(tempObjData)\n\n    return React.createElement(React.Fragment, null, React.createElement(\"table\", {\n      border: \"1\",\n      align: \"center\",\n      cellPadding: \"10px\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      rowSpan: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, \"Monday\"), React.createElement(\"td\", {\n      rowSpan: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, \"8:00 a.m\"), React.createElement(\"td\", {\n      rowSpan: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, \"5:00 p.m\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, \"Introduction to XML\")), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, \"Validity: DTD and Relax NG\")), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      rowSpan: \"4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, \"Tuesday\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, \"8:00 a.m\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, \"11:00 a.m\"), React.createElement(\"td\", {\n      rowSpan: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, \"XPath\")), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      rowSpan: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, \"11:00 a.m\"), React.createElement(\"td\", {\n      rowSpan: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, \"2:00 p.m\")), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      rowSpan: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, \"XSL transformation\")), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, \"2:00 p.m\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, \"5:00 p.m\")), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, \"Wednesday\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, \"8:00 a.m\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, \"12:00 p.m\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, \"XLS Formatting Objects\")))));\n  }\n\n}","map":{"version":3,"sources":["/home/devu/projects/my-app/src/CustomObj.js"],"names":["React","Component","storeProducts","CustomObj","constructor","props","state","store","data","tempObjData","render","tempObj","Object","keys","forEach","k","val","customer","month","itemName","salesPerson","JSON","stringify","headers","pivotStructure","key","value","values","valueLength","length","console","log","head","i","count"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { storeProducts } from \"./data\"\n\nexport default class CustomObj extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            store: storeProducts.data,\n            tempObjData: ''\n        }\n    }\n\n    render() {\n        let store = this.state.store;\n        var tempObj = {};\n\n        Object.keys(store).forEach(function (k) {\n            var val = store[k];\n            var customer = val['customer_name'];\n            var month = val['month'];\n            var itemName = val['item_name']\n            var salesPerson = val['salesperson_name']\n\n            if (!tempObj[customer])\n                tempObj[customer] = { 'type': 'row', 'key': 'customer_name' };\n\n            if (!tempObj[customer][month])\n                tempObj[customer][month] = { 'type': 'row', 'key': 'month' }\n\n            if (!tempObj[customer][month][itemName])\n                tempObj[customer][month][itemName] = { 'type': 'column', 'key': 'item_name' }\n\n            if (!tempObj[customer][month][itemName][salesPerson])\n                tempObj[customer][month][itemName][salesPerson] = { 'type': 'column', 'key': 'sales_person', 'data': { 'value': 0, 'qty': 0 } }\n\n            tempObj[customer][month][itemName][salesPerson]['data']['value'] = val['taxpaidamount'];\n            tempObj[customer][month][itemName][salesPerson]['data']['qty'] = val['qty'];\n\n        });\n\n        // console.log(\"result :\", tempObj);\n        var tempObjData = JSON.stringify(tempObj)\n        var headers\n        // console.log(tempObjData) \n        // var arr = Object.values(tempObj);\n        var pivotStructure = '';\n        Object.keys(tempObj).forEach(function (k) {\n            var key = k;\n            var value = tempObj[k];\n            // console.log(k)\n            // console.log(value)\n            var value = Object.values(value);\n            var valueLength = Object.values(value).length;\n            console.log(\"value \", value);\n            console.log(\"length \", valueLength);\n            // if(valueLength)\n            var head\n            for (let i = 0; i < (Object.values(value).length) - 2; i++) {\n                head+=\n                    <>\n                <tr>\n                    <th colSpan=\"2\">Month</th>\n                </tr>\n                <tr>\n                    <th>Value</th>\n                    <th>Qty</th>\n                </tr>\n                </>\n                \n            }\n            // headers = value.map((item, index) => {\n            //     return (\n            //         <>\n            //             <thead>\n\n            //                 <tr>\n            //                     <th rowSpan=\"3\">Row/column</th>\n            //                 </tr>\n            //                 <tr>\n            //                     <th colSpan=\"2\">Month</th>\n            //                 </tr>\n            //                 <tr>\n            //                     <th>Value</th>\n            //                     <th>Qty</th>\n            //                 </tr>\n\n            //             </thead>\n\n            //             {/* <tbody>\n            //             <tr>\n            //                 <td rowSpan=\"2\">Monday</td>\n            //                 <td rowSpan=\"2\">8:00 a.m</td>\n            //                 <td rowSpan=\"2\">5:00 p.m</td>\n            //                 <td>Introduction to XML</td>\n            //             </tr>\n            //             <tr>\n            //                 <td>Validity: DTD and Relax NG</td>\n            //             </tr>\n            //             <tr>\n            //                 <td rowSpan=\"4\">Tuesday</td>\n            //                 <td>8:00 a.m</td>\n            //                 <td>11:00 a.m</td>\n            //                 <td rowSpan=\"2\">XPath</td>\n            //             </tr>\n            //             <tr>\n            //                 <td rowSpan=\"2\">11:00 a.m</td>\n            //                 <td rowSpan=\"2\">2:00 p.m</td>\n            //             </tr>\n            //             <tr>\n            //                 <td rowSpan=\"2\">XSL transformation</td>\n            //             </tr>\n            //             <tr>\n            //                 <td>2:00 p.m</td>\n            //                 <td>5:00 p.m</td>\n            //             </tr>\n            //             <tr>\n            //                 <td>Wednesday</td>\n            //                 <td>8:00 a.m</td>\n            //                 <td>12:00 p.m</td>\n            //                 <td>XLS Formatting Objects</td>\n            //             </tr> */}\n\n            //             {/* </tbody> */}\n            //         </>\n            //         // </table>\n            //     )\n            // })\n\n            // mainHeader+=headers\n            let count = Object.keys(value).length //  \n            // pivotStructure= `<tr><td rowSpan=\"2\">${key}</td></tr>`\n\n            // console.log(count);\n\n\n\n            // var span=\"\";\n            // if(value){\n            // pivotStructure+=<tr>{value.}</tr>\n            // }\n            //     span=\"colspan=10\";\n            // console.log(value.key)\n            // pivotStructure+=\n        })\n\n\n        // console.log(arr)\n        // document.write(tempObjData)\n\n        return (\n            <>\n                <table border=\"1\" align=\"center\" cellPadding=\"10px\">\n                    {/*    <thead>\n                        <tr>\n                            <th rowSpan=\"3\">Row/column</th>\n                        </tr>\n                        <tr>\n                            <th colSpan=\"2\">Month</th>\n                        </tr>\n                        <tr>\n                            <th>Value</th>\n                            <th>Qty</th>\n                        </tr>\n                    </thead>\n                */}\n                    {/* {headers} */}\n\n                    <tbody>\n                        <tr>\n                            <td rowSpan=\"2\">Monday</td>\n                            <td rowSpan=\"2\">8:00 a.m</td>\n                            <td rowSpan=\"2\">5:00 p.m</td>\n                            <td>Introduction to XML</td>\n                        </tr>\n                        <tr>\n                            <td>Validity: DTD and Relax NG</td>\n                        </tr>\n                        <tr>\n                            <td rowSpan=\"4\">Tuesday</td>\n                            <td>8:00 a.m</td>\n                            <td>11:00 a.m</td>\n                            <td rowSpan=\"2\">XPath</td>\n                        </tr>\n                        <tr>\n                            <td rowSpan=\"2\">11:00 a.m</td>\n                            <td rowSpan=\"2\">2:00 p.m</td>\n                        </tr>\n                        <tr>\n                            <td rowSpan=\"2\">XSL transformation</td>\n                        </tr>\n                        <tr>\n                            <td>2:00 p.m</td>\n                            <td>5:00 p.m</td>\n                        </tr>\n                        <tr>\n                            <td>Wednesday</td>\n                            <td>8:00 a.m</td>\n                            <td>12:00 p.m</td>\n                            <td>XLS Formatting Objects</td>\n                        </tr>\n\n                    </tbody>\n                </table>\n            </>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}