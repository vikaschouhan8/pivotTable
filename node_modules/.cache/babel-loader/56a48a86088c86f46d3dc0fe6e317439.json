{"ast":null,"code":"var _jsxFileName = \"/home/devu/projects/my-app/src/CustomObj.js\";\nimport React, { Component } from 'react';\nimport { storeProducts } from \"./data\";\nexport default class CustomObj extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      store: storeProducts.data,\n      tempObjData: ''\n    };\n  }\n\n  render() {\n    let store = this.state.store;\n    var tempObj = {};\n    Object.keys(store).forEach(function (k) {\n      var val = store[k];\n      var customer = val['customer_name'];\n      var month = val['month'];\n      var itemName = val['item_name'];\n      var salesPerson = val['salesperson_name'];\n      if (!tempObj[customer]) tempObj[customer] = {\n        'type': 'row',\n        'key': 'customer_name'\n      };\n      if (!tempObj[customer][month]) tempObj[customer][month] = {\n        'type': 'row',\n        'key': 'month'\n      };\n      if (!tempObj[customer][month][itemName]) tempObj[customer][month][itemName] = {\n        'type': 'column',\n        'key': 'item_name'\n      };\n      if (!tempObj[customer][month][itemName][salesPerson]) tempObj[customer][month][itemName][salesPerson] = {\n        'type': 'column',\n        'key': 'sales_person',\n        'data': {\n          'value': 0,\n          'qty': 0\n        }\n      };\n      tempObj[customer][month][itemName][salesPerson]['data']['value'] = val['taxpaidamount'];\n      tempObj[customer][month][itemName][salesPerson]['data']['qty'] = val['qty'];\n    }); // console.log(\"result :\", tempObj);\n\n    var tempObjData = JSON.stringify(tempObj);\n    var headers; // console.log(tempObjData) \n    // var arr = Object.values(tempObj);\n\n    var pivotStructure = '';\n    Object.keys(tempObj).forEach(function (k) {\n      var key = k;\n      var value = tempObj[k]; // console.log(k)\n      // console.log(value)\n\n      var value = Object.values(value);\n      var valueLength = Object.values(value).length;\n      console.log(\"value \", value);\n      console.log(\"length \", valueLength);\n      headers = value.map((item, index) => {\n        return React.createElement(\"table\", {\n          border: \"1\",\n          align: \"center\",\n          cellPadding: \"10px\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }, React.createElement(\"thead\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }, React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }, React.createElement(\"th\", {\n          rowSpan: \"3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }, \"Row/column\")), React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, React.createElement(\"th\", {\n          colSpan: \"2\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, \"Month\")), React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, \"Value\"), React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }, \"Qty\"))), React.createElement(\"tbody\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          rowSpan: \"2\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }, \"Monday\"), React.createElement(\"td\", {\n          rowSpan: \"2\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }, \"8:00 a.m\"), React.createElement(\"td\", {\n          rowSpan: \"2\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }, \"5:00 p.m\"), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }, \"Introduction to XML\")), React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }, \"Validity: DTD and Relax NG\")), React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          rowSpan: \"4\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        }, \"Tuesday\"), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        }, \"8:00 a.m\"), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        }, \"11:00 a.m\"), React.createElement(\"td\", {\n          rowSpan: \"2\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }, \"XPath\")), React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          rowSpan: \"2\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }, \"11:00 a.m\"), React.createElement(\"td\", {\n          rowSpan: \"2\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }, \"2:00 p.m\")), React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          rowSpan: \"2\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }, \"XSL transformation\")), React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        }, \"2:00 p.m\"), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        }, \"5:00 p.m\")), React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        }, \"Wednesday\"), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        }, \"8:00 a.m\"), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }, \"12:00 p.m\"), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103\n          },\n          __self: this\n        }, \"XLS Formatting Objects\"))));\n      }); // mainHeader+=headers\n\n      let count = Object.keys(value).length; //  \n      // pivotStructure= `<tr><td rowSpan=\"2\">${key}</td></tr>`\n      // console.log(count);\n      // var span=\"\";\n      // if(value){\n      // pivotStructure+=<tr>{value.}</tr>\n      // }\n      //     span=\"colspan=10\";\n      // console.log(value.key)\n      // pivotStructure+=\n    }); // console.log(arr)\n    // document.write(tempObjData)\n\n    return React.createElement(React.Fragment, null, headers);\n  }\n\n}","map":{"version":3,"sources":["/home/devu/projects/my-app/src/CustomObj.js"],"names":["React","Component","storeProducts","CustomObj","constructor","props","state","store","data","tempObjData","render","tempObj","Object","keys","forEach","k","val","customer","month","itemName","salesPerson","JSON","stringify","headers","pivotStructure","key","value","values","valueLength","length","console","log","map","item","index","count"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { storeProducts } from \"./data\"\n\nexport default class CustomObj extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            store: storeProducts.data,\n            tempObjData: ''\n        }\n    }\n\n    render() {\n        let store = this.state.store;\n        var tempObj = {};\n\n        Object.keys(store).forEach(function (k) {\n            var val = store[k];\n            var customer = val['customer_name'];\n            var month = val['month'];\n            var itemName = val['item_name']\n            var salesPerson = val['salesperson_name']\n\n            if (!tempObj[customer])\n                tempObj[customer] = { 'type': 'row', 'key': 'customer_name' };\n\n            if (!tempObj[customer][month])\n                tempObj[customer][month] = { 'type': 'row', 'key': 'month' }\n\n            if (!tempObj[customer][month][itemName])\n                tempObj[customer][month][itemName] = { 'type': 'column', 'key': 'item_name' }\n\n            if (!tempObj[customer][month][itemName][salesPerson])\n                tempObj[customer][month][itemName][salesPerson] = { 'type': 'column', 'key': 'sales_person', 'data': { 'value': 0, 'qty': 0 } }\n\n            tempObj[customer][month][itemName][salesPerson]['data']['value'] = val['taxpaidamount'];\n            tempObj[customer][month][itemName][salesPerson]['data']['qty'] = val['qty'];\n\n        });\n\n        // console.log(\"result :\", tempObj);\n        var tempObjData = JSON.stringify(tempObj)\n        var headers\n        // console.log(tempObjData) \n        // var arr = Object.values(tempObj);\n        var pivotStructure = '';\n        Object.keys(tempObj).forEach(function (k) {\n            var key = k;\n            var value = tempObj[k];\n            // console.log(k)\n            // console.log(value)\n            var value = Object.values(value);\n            var valueLength = Object.values(value).length;\n            console.log(\"value \",value);\n            console.log(\"length \",valueLength);\n            headers = value.map((item, index)=>{\n                return (\n                <table border=\"1\" align=\"center\" cellPadding=\"10px\">\n                    <thead>\n                        <tr>\n                            <th rowSpan=\"3\">Row/column</th>\n                        </tr>\n                        <tr>\n                            <th colSpan=\"2\">Month</th>\n                        </tr>\n                        <tr>\n                            <th>Value</th>\n                            <th>Qty</th>\n                        </tr>\n                    </thead>\n\n                    <tbody>\n                        <tr>\n                            <td rowSpan=\"2\">Monday</td>\n                            <td rowSpan=\"2\">8:00 a.m</td>\n                            <td rowSpan=\"2\">5:00 p.m</td>\n                            <td>Introduction to XML</td>\n                        </tr>\n                        <tr>\n                            <td>Validity: DTD and Relax NG</td>\n                        </tr>\n                        <tr>\n                            <td rowSpan=\"4\">Tuesday</td>\n                            <td>8:00 a.m</td>\n                            <td>11:00 a.m</td>\n                            <td rowSpan=\"2\">XPath</td>\n                        </tr>\n                        <tr>\n                            <td rowSpan=\"2\">11:00 a.m</td>\n                            <td rowSpan=\"2\">2:00 p.m</td>\n                        </tr>\n                        <tr>\n                            <td rowSpan=\"2\">XSL transformation</td>\n                        </tr>\n                        <tr>\n                            <td>2:00 p.m</td>\n                            <td>5:00 p.m</td>\n                        </tr>\n                        <tr>\n                            <td>Wednesday</td>\n                            <td>8:00 a.m</td>\n                            <td>12:00 p.m</td>\n                            <td>XLS Formatting Objects</td>\n                        </tr>\n\n                    </tbody>\n                </table>\n                )\n            })     \n            \n            // mainHeader+=headers\n            let count = Object.keys(value).length //  \n            // pivotStructure= `<tr><td rowSpan=\"2\">${key}</td></tr>`\n\n            // console.log(count);\n\n\n\n            // var span=\"\";\n            // if(value){\n            // pivotStructure+=<tr>{value.}</tr>\n            // }\n            //     span=\"colspan=10\";\n            // console.log(value.key)\n            // pivotStructure+=\n        })\n\n\n        // console.log(arr)\n        // document.write(tempObjData)\n\n        return (\n          <>\n                {/* <table border=\"1\" align=\"center\" cellPadding=\"10px\">\n                    <thead>\n                        <tr>\n                            <th rowSpan=\"3\">Row/column</th>\n                        </tr>\n                        <tr>\n                            <th colSpan=\"2\">Month</th>\n                        </tr>\n                        <tr>\n                            <th>Value</th>\n                            <th>Qty</th>\n                        </tr>\n                    </thead>\n\n                    <tbody>\n                        <tr>\n                            <td rowSpan=\"2\">Monday</td>\n                            <td rowSpan=\"2\">8:00 a.m</td>\n                            <td rowSpan=\"2\">5:00 p.m</td>\n                            <td>Introduction to XML</td>\n                        </tr>\n                        <tr>\n                            <td>Validity: DTD and Relax NG</td>\n                        </tr>\n                        <tr>\n                            <td rowSpan=\"4\">Tuesday</td>\n                            <td>8:00 a.m</td>\n                            <td>11:00 a.m</td>\n                            <td rowSpan=\"2\">XPath</td>\n                        </tr>\n                        <tr>\n                            <td rowSpan=\"2\">11:00 a.m</td>\n                            <td rowSpan=\"2\">2:00 p.m</td>\n                        </tr>\n                        <tr>\n                            <td rowSpan=\"2\">XSL transformation</td>\n                        </tr>\n                        <tr>\n                            <td>2:00 p.m</td>\n                            <td>5:00 p.m</td>\n                        </tr>\n                        <tr>\n                            <td>Wednesday</td>\n                            <td>8:00 a.m</td>\n                            <td>12:00 p.m</td>\n                            <td>XLS Formatting Objects</td>\n                        </tr>\n\n                    </tbody>\n                </table> */}\n{headers}\n          </>\n                )\n              }\n          }\n"]},"metadata":{},"sourceType":"module"}